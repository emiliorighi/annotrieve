openapi: 3.1.0

info:
  version: "1.0.0"
  title: "Annotrieve API"
  description: "API for retrieving and managing eukaryotic genome annotations"
  contact:
    email: "emilio.righi@crg.eu"

servers:
  - url: https://genome.crg.es/annotrieve/api/v0
    description: Production server
tags:
  - name: "annotations"
    description: "Genome annotation endpoints"
  - name: "assemblies"
    description: "Assembly information endpoints"
  - name: "organisms"
    description: "Organism information endpoints"
  - name: "taxons"
    description: "Taxonomy information endpoints"

paths:
  # ==================== ANNOTATIONS ====================
  /annotations:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotations"
      summary: "Get a paginated list of genomic annotations"
      parameters:
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/assembly_accessions"
        - $ref: "#/components/parameters/db_sources"
        - $ref: "#/components/parameters/feature_sources"
        - $ref: "#/components/parameters/biotypes"
        - $ref: "#/components/parameters/feature_types"
        - $ref: "#/components/parameters/pipelines"
        - $ref: "#/components/parameters/providers"
        - $ref: "#/components/parameters/md5_checksums"
        - $ref: "#/components/parameters/latest_release_by"
        - $ref: "#/components/parameters/has_stats"
        - $ref: "#/components/parameters/sort_by"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/release_date_from"
        - $ref: "#/components/parameters/release_date_to"
        - $ref: "#/components/parameters/fields"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAnnotationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      tags:
        - "annotations"
      operationId: "postAnnotations"
      summary: "Get annotations using POST body parameters"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotationQueryParams"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAnnotationsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /annotations/stats/summary:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotationsSummaryStats"
      summary: "Get comprehensive summary statistics across all annotations"
      parameters:
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/assembly_accessions"
        - $ref: "#/components/parameters/db_sources"
        - $ref: "#/components/parameters/feature_sources"
        - $ref: "#/components/parameters/biotypes"
        - $ref: "#/components/parameters/feature_types"
        - $ref: "#/components/parameters/pipelines"
        - $ref: "#/components/parameters/providers"
        - $ref: "#/components/parameters/latest_release_by"
      responses:
        "200":
          description: "Comprehensive annotation statistics"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationsSummaryStats"
        "400":
          $ref: "#/components/responses/BadRequest"
    post:
      tags:
        - "annotations"
      operationId: "postAnnotationsSummaryStats"
      summary: "Get summary statistics using POST"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotationQueryParams"
      responses:
        "200":
          description: "Comprehensive annotation statistics"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationsSummaryStats"

  /annotations/frequencies:
    get:
      tags:
        - "annotations"
      operationId: "getFrequencyFields"
      summary: "Get list of available fields for frequency queries"
      responses:
        "200":
          description: "List of available frequency fields"
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: string

  /annotations/frequencies/{field}:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotationFrequencies"
      summary: "Get frequency counts for a specific field across annotations"
      parameters:
        - name: field
          in: path
          required: true
          description: "Field to get frequencies for (e.g., 'organism_name', 'taxid', 'source')"
          schema:
            type: string
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/assembly_accessions"
        - $ref: "#/components/parameters/db_sources"
        - $ref: "#/components/parameters/feature_sources"
        - $ref: "#/components/parameters/biotypes"
        - $ref: "#/components/parameters/feature_types"
        - $ref: "#/components/parameters/pipelines"
        - $ref: "#/components/parameters/providers"
      responses:
        "200":
          description: "Frequency counts for the field"
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        "400":
          $ref: "#/components/responses/BadRequest"
    post:
      tags:
        - "annotations"
      operationId: "postAnnotationFrequencies"
      summary: "Get field frequencies using POST"
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotationQueryParams"
      responses:
        "200":
          description: "Frequency counts response"
          content:
            application/json:
              schema:
                type: object

  /annotations/errors:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotationErrors"
      summary: "Get a list of annotation import errors"
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: "List of annotation errors"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AnnotationError"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
                  total:
                    type: integer

  /annotations/{md5_checksum}:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotationById"
      summary: "Get a specific annotation by MD5 checksum"
      parameters:
        - name: md5_checksum
          in: path
          required: true
          description: "MD5 checksum of the annotation"
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
      responses:
        "200":
          description: "Annotation details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
        "404":
          $ref: "#/components/responses/NotFound"

  /annotations/{md5_checksum}/contigs:
    get:
      tags:
        - "annotations"
      operationId: "updateAnnotationStats"
      summary: "Update annotation statistics (admin endpoint)"
      parameters:
        - name: md5_checksum
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: "Statistics data to update"
      responses:
        "200":
          description: "Stats updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          $ref: "#/components/responses/NotFound"

  /annotations/{md5_checksum}/gff:
    get:
      tags:
        - "annotations"
      operationId: "streamAnnotationGFF"
      summary: "Stream GFF data for an annotation file"
      parameters:
        - name: md5_checksum
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
        - name: seqid
          in: query
          description: "Sequence/contig identifier"
          schema:
            type: string
        - name: start
          in: query
          description: "Start position (0-based)"
          schema:
            type: integer
            minimum: 0
        - name: end
          in: query
          description: "End position"
          schema:
            type: integer
            minimum: 0
        - name: feature_type
          in: query
          description: "Filter by feature type (e.g., 'gene', 'exon')"
          schema:
            type: string
        - name: feature_source
          in: query
          description: "Filter by feature source"
          schema:
            type: string
      responses:
        "200":
          description: "GFF3 format data stream"
          content:
            text/plain:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /annotations/{md5_checksum}/contigs/aliases:
    get:
      tags:
        - "annotations"
      operationId: "getAnnotationContigAliases"
      summary: "Get contig name aliases and mappings"
      parameters:
        - name: md5_checksum
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: "Contig aliases mapping"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ContigAlias"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
                  total:
                    type: integer

  # ==================== ASSEMBLIES ====================
  /assemblies:
    get:
      tags:
        - "assemblies"
      operationId: "getAssemblies"
      summary: "Get a paginated list of assemblies"
      parameters:
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/assembly_accessions"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort_by"
        - $ref: "#/components/parameters/sort_order"
      responses:
        "200":
          description: "List of assemblies"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAssembliesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
    post:
      tags:
        - "assemblies"
      operationId: "postAssemblies"
      summary: "Get assemblies using POST"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssemblyQueryParams"
      responses:
        "200":
          description: "List of assemblies"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAssembliesResponse"

  /assemblies/frequencies/{field}:
    get:
      tags:
        - "assemblies"
      operationId: "getAssemblyFrequencies"
      summary: "Get frequency counts for a specific field across assemblies"
      parameters:
        - name: field
          in: path
          required: true
          description: "Field to get frequencies for"
          schema:
            type: string
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/assembly_accessions"
      responses:
        "200":
          description: "Frequency counts"
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - "assemblies"
      operationId: "postAssemblyFrequencies"
      summary: "Get assembly frequencies using POST"
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssemblyQueryParams"
      responses:
        "200":
          description: "Frequency counts"
          content:
            application/json:
              schema:
                type: object

  /assemblies/{assembly_accession}:
    get:
      tags:
        - "assemblies"
      operationId: "getAssemblyById"
      summary: "Get a specific assembly by accession"
      parameters:
        - name: assembly_accession
          in: path
          required: true
          description: "Assembly accession (e.g., 'GCA_000001405.29')"
          schema:
            type: string
      responses:
        "200":
          description: "Assembly details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assembly"
        "404":
          $ref: "#/components/responses/NotFound"

  /assemblies/{assembly_accession}/chr_aliases:
    get:
      tags:
        - "assemblies"
      operationId: "getChromosomeAliases"
      summary: "Get chromosome aliases file for the assembly"
      parameters:
        - name: assembly_accession
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Chromosome aliases mapping file"
          content:
            text/plain:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"

  /assemblies/{assembly_accession}/assembled_molecules:
    get:
      tags:
        - "assemblies"
      operationId: "getAssembledMolecules"
      summary: "Get assembled molecules (chromosomes/contigs) for an assembly"
      parameters:
        - name: assembly_accession
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: "List of assembled molecules"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AssembledMolecule"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
                  total:
                    type: integer

  /assemblies/{assembly_accession}/paired:
    get:
      tags:
        - "assemblies"
      operationId: "getPairedAssembly"
      summary: "Get the paired assembly (RefSeq <-> GenBank)"
      parameters:
        - name: assembly_accession
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Paired assembly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assembly"
        "404":
          $ref: "#/components/responses/NotFound"

  # ==================== ORGANISMS ====================
  /organisms:
    get:
      tags:
        - "organisms"
      operationId: "getOrganisms"
      summary: "Get a paginated list of organisms"
      parameters:
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: "List of organisms"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOrganismsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
    post:
      tags:
        - "organisms"
      operationId: "postOrganisms"
      summary: "Get organisms using POST"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganismQueryParams"
      responses:
        "200":
          description: "List of organisms"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOrganismsResponse"

  /organisms/{taxid}:
    get:
      tags:
        - "organisms"
      operationId: "getOrganismById"
      summary: "Get a specific organism by taxid"
      parameters:
        - name: taxid
          in: path
          required: true
          description: "NCBI Taxonomy ID"
          schema:
            type: string
      responses:
        "200":
          description: "Organism details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organism"
        "404":
          $ref: "#/components/responses/NotFound"

  # ==================== TAXONS ====================
  /taxons:
    get:
      tags:
        - "taxons"
      operationId: "getTaxons"
      summary: "Get a paginated list of taxonomy nodes"
      parameters:
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/taxids"
        - $ref: "#/components/parameters/rank"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort_by"
        - $ref: "#/components/parameters/sort_order"
      responses:
        "200":
          description: "List of taxon nodes"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedTaxonsResponse"
    post:
      tags:
        - "taxons"
      operationId: "postTaxons"
      summary: "Get taxons using POST"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxonQueryParams"
      responses:
        "200":
          description: "List of taxon nodes"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedTaxonsResponse"

  /taxons/{taxid}:
    get:
      tags:
        - "taxons"
      operationId: "getTaxonById"
      summary: "Get a specific taxon node by taxid"
      parameters:
        - name: taxid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Taxon node details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxonNode"
        "404":
          $ref: "#/components/responses/NotFound"

  /taxons/{taxid}/children:
    get:
      tags:
        - "taxons"
      operationId: "getTaxonChildren"
      summary: "Get child nodes of a taxon"
      parameters:
        - name: taxid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "List of child taxon nodes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxonNode"

  /taxons/{taxid}/ancestors:
    get:
      tags:
        - "taxons"
      operationId: "getTaxonAncestors"
      summary: "Get ancestor lineage of a taxon"
      parameters:
        - name: taxid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "List of ancestor taxon nodes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxonNode"

components:
  parameters:
    filter:
      name: "filter"
      in: "query"
      description: "Text search filter across multiple fields"
      schema:
        type: "string"
    
    limit:
      name: "limit"
      in: "query"
      description: "Maximum number of results to return"
      schema:
        type: "integer"
        default: 20
        minimum: 1
        maximum: 1000
    
    offset:
      name: "offset"
      in: "query"
      description: "Number of results to skip"
      schema:
        type: "integer"
        default: 0
        minimum: 0
    
    taxids:
      name: "taxids"
      in: "query"
      description: "Comma-separated list of taxonomy IDs"
      schema:
        type: "string"
      example: "9606,10090,7227"
    
    assembly_accessions:
      name: "assembly_accessions"
      in: "query"
      description: "Comma-separated list of assembly accessions"
      schema:
        type: "string"
      example: "GCA_000001405.29,GCF_000001405.40"
    
    db_sources:
      name: "db_sources"
      in: "query"
      description: "Comma-separated list of database sources"
      schema:
        type: "string"
      example: "RefSeq,Ensembl"
    
    feature_sources:
      name: "feature_sources"
      in: "query"
      description: "Comma-separated list of feature sources from GFF column 2"
      schema:
        type: "string"
      example: "BestRefSeq,Gnomon"
    
    biotypes:
      name: "biotypes"
      in: "query"
      description: "Comma-separated list of biotypes to filter"
      schema:
        type: "string"
      example: "protein_coding,lncRNA"
    
    feature_types:
      name: "feature_types"
      in: "query"
      description: "Comma-separated list of feature types (GFF column 3)"
      schema:
        type: "string"
      example: "gene,mRNA,CDS"
    
    md5_checksums:
      name: "md5_checksums"
      in: "query"
      description: "Comma-separated list of annotation MD5 checksums"
      schema:
        type: "string"
    
    latest_release_by:
      name: "latest_release_by"
      in: "query"
      description: "Group by field and return only latest release"
      schema:
        type: "string"
        enum: ["organism", "assembly"]
    
    pipelines:
      name: "pipelines"
      in: "query"
      description: "Comma-separated list of pipeline names"
      schema:
        type: "string"
      example: "BestRefSeq,NCBI"
    
    providers:
      name: "providers"
      in: "query"
      description: "Comma-separated list of annotation providers"
      schema:
        type: "string"
      example: "RefSeq,Ensembl"
    
    has_stats:
      name: "has_stats"
      in: "query"
      description: "Filter by presence of statistics"
      schema:
        type: "boolean"
    
    sort_by:
      name: "sort_by"
      in: "query"
      description: "Field to sort by"
      schema:
        type: "string"
    
    sort_order:
      name: "sort_order"
      in: "query"
      description: "Sort order (asc or desc)"
      schema:
        type: "string"
        enum: ["asc", "desc"]
        default: "asc"
    
    release_date_from:
      name: "release_date_from"
      in: "query"
      description: "Filter annotations released after this date (ISO format)"
      schema:
        type: "string"
        format: "date"
    
    release_date_to:
      name: "release_date_to"
      in: "query"
      description: "Filter annotations released before this date (ISO format)"
      schema:
        type: "string"
        format: "date"
    
    fields:
      name: "fields"
      in: "query"
      description: "Comma-separated list of fields to return (for projection)"
      schema:
        type: "string"
    
    rank:
      name: "rank"
      in: "query"
      description: "Taxonomic rank to filter by"
      schema:
        type: "string"
      example: "species"

  responses:
    BadRequest:
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    
    NotFound:
      description: "Resource not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    
    Forbidden:
      description: "Forbidden - authentication required"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    
    InternalError:
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:
    ErrorResponse:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "Error message"
      required:
        - detail

    Pagination:
      type: "object"
      properties:
        offset:
          type: "integer"
        limit:
          type: "integer"

    # ==================== ANNOTATION SCHEMAS ====================
    AnnotationQueryParams:
      type: "object"
      properties:
        filter:
          type: "string"
        taxids:
          type: "string"
        assembly_accessions:
          type: "string"
        db_sources:
          type: "string"
        feature_sources:
          type: "string"
        biotypes:
          type: "string"
        feature_types:
          type: "string"
        pipelines:
          type: "string"
        providers:
          type: "string"
        md5_checksums:
          type: "string"
        has_stats:
          type: "boolean"
        offset:
          type: "integer"
          default: 0
        limit:
          type: "integer"
          default: 20
        latest_release_by:
          type: "string"
          enum: ["organism", "assembly"]
        sort_by:
          type: "string"
        sort_order:
          type: "string"
          enum: ["asc", "desc"]
        release_date_from:
          type: "string"
          format: "date"
        release_date_to:
          type: "string"
          format: "date"
        fields:
          type: "string"

    Annotation:
      type: "object"
      properties:
        annotation_id:
          type: "string"
          description: "MD5 checksum of the annotation (unique identifier)"
        name:
          type: "string"
          description: "Annotation name"
        db_source:
          type: "string"
          description: "Database source (e.g., 'RefSeq', 'Ensembl')"
        scientific_name:
          type: "string"
          description: "Scientific name of the species"
        taxon_id:
          type: "string"
          description: "NCBI taxonomy identifier"
        taxon_lineage:
          type: "array"
          description: "Taxonomy lineage from species to root"
          items:
            type: "string"
        assembly_accession:
          type: "string"
          description: "Assembly accession"
        assembly_name:
          type: "string"
          description: "Assembly name"
        source_file_info:
          type: "object"
          properties:
            database:
              type: "string"
            provider:
              type: "string"
            release_date:
              type: "string"
              format: "date-time"
            url_path:
              type: "string"
              format: "uri"
            last_modified:
              type: "string"
              format: "date-time"
            uncompressed_md5:
              type: "string"
        indexed_file_info:
          type: "object"
          properties:
            bgzipped_path:
              type: "string"
            csi_path:
              type: "string"
            uncompressed_md5:
              type: "string"
            file_size:
              type: "integer"
            processed_at:
              type: "string"
              format: "date-time"
        features_summary:
          type: "object"
          properties:
            attribute_keys:
              type: "array"
              items:
                type: "string"
            types:
              type: "array"
              items:
                type: "string"
            sources:
              type: "array"
              items:
                type: "string"
            biotypes:
              type: "array"
              items:
                type: "string"
            types_missing_id:
              type: "array"
              items:
                type: "string"
            root_type_counts:
              type: "object"
              additionalProperties:
                type: "integer"
            has_biotype:
              type: "boolean"
            has_cds:
              type: "boolean"
            has_exon:
              type: "boolean"

    PaginatedAnnotationsResponse:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Annotation"
        pagination:
          $ref: "#/components/schemas/Pagination"
        total:
          type: "integer"

    AnnotationError:
      type: "object"
      properties:
        url_path:
          type: "string"
        error_message:
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"

    AnnotationsSummaryStats:
      type: "object"
      description: "Comprehensive summary statistics across annotations"
      properties:
        total_annotations:
          type: "integer"
          description: "Total number of annotations"
        organisms_count:
          type: "integer"
          description: "Number of unique organisms"
        assemblies_count:
          type: "integer"
          description: "Number of unique assemblies"
        coding_genes:
          type: "object"
          description: "Statistics for coding genes"
          properties:
            count:
              type: "array"
              items:
                type: "integer"
            mean_gene_length:
              type: "array"
              items:
                type: "number"
        non_coding_genes:
          type: "object"
          description: "Statistics for non-coding genes"
        pseudogenes:
          type: "object"
          description: "Statistics for pseudogenes"
        mrna:
          type: "object"
          description: "Statistics for mRNA transcripts"
        lncrna:
          type: "object"
          description: "Statistics for lncRNA"
        cds:
          type: "object"
          description: "Statistics for CDS features"
        exons:
          type: "object"
          description: "Statistics for exons"

    DownloadSummaryResponse:
      type: "object"
      properties:
        total_bytes:
          type: "integer"
        file_count:
          type: "integer"
        estimated_size_mb:
          type: "number"

    ContigAlias:
      type: "object"
      properties:
        sequence_id:
          type: "string"
        aliases:
          type: "array"
          items:
            type: "string"

    # ==================== ASSEMBLY SCHEMAS ====================
    AssemblyQueryParams:
      type: "object"
      properties:
        filter:
          type: "string"
        taxids:
          type: "string"
        assembly_accessions:
          type: "string"
        offset:
          type: "integer"
          default: 0
        limit:
          type: "integer"
          default: 20
        sort_by:
          type: "string"
        sort_order:
          type: "string"
          enum: ["asc", "desc"]

    Assembly:
      type: "object"
      properties:
        assembly_accession:
          type: "string"
        assembly_name:
          type: "string"
        organism_name:
          type: "string"
        taxid:
          type: "string"
        paired_assembly_accession:
          type: "string"
        assembly_level:
          type: "string"
        genome_representation:
          type: "string"
        refseq_category:
          type: "string"
        assembly_stats:
          type: "object"
          properties:
            total_sequence_length:
              type: "string"
            total_ungapped_length:
              type: "string"
            gc_percent:
              type: "integer"
            number_of_contigs:
              type: "integer"
            contig_n50:
              type: "integer"

    AssembledMolecule:
      type: "object"
      properties:
        sequence_name:
          type: "string"
        genbank_accession:
          type: "string"
        refseq_accession:
          type: "string"
        assigned_molecule:
          type: "string"
        sequence_role:
          type: "string"
        sequence_length:
          type: "integer"

    PaginatedAssembliesResponse:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Assembly"
        pagination:
          $ref: "#/components/schemas/Pagination"
        total:
          type: "integer"

    # ==================== ORGANISM SCHEMAS ====================
    OrganismQueryParams:
      type: "object"
      properties:
        filter:
          type: "string"
        taxids:
          type: "string"
        offset:
          type: "integer"
          default: 0
        limit:
          type: "integer"
          default: 20

    Organism:
      type: "object"
      properties:
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        common_name:
          type: "string"
        lineage:
          type: "array"
          items:
            type: "string"
        annotation_count:
          type: "integer"
        assembly_count:
          type: "integer"

    PaginatedOrganismsResponse:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Organism"
        pagination:
          $ref: "#/components/schemas/Pagination"
        total:
          type: "integer"

    # ==================== TAXON SCHEMAS ====================
    TaxonQueryParams:
      type: "object"
      properties:
        filter:
          type: "string"
        taxids:
          type: "string"
        rank:
          type: "string"
          description: "Filter by taxonomic rank"
        offset:
          type: "integer"
          default: 0
        limit:
          type: "integer"
          default: 20
        sort_by:
          type: "string"
        sort_order:
          type: "string"
          enum: ["asc", "desc"]

    TaxonNode:
      type: "object"
      properties:
        taxid:
          type: "string"
        scientific_name:
          type: "string"
        rank:
          type: "string"
        parent_taxid:
          type: "string"
        lineage:
          type: "array"
          items:
            type: "string"

    PaginatedTaxonsResponse:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/TaxonNode"
        pagination:
          $ref: "#/components/schemas/Pagination"
        total:
          type: "integer"
