"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3971],{73971:function(e,t,i){i.r(t),i.d(t,{default:function(){return g}});let n=BigInt(32);"getBigInt64"in DataView||(DataView.prototype.getBigInt64=function(e,t){return function(e,t,i){let r=Number(!!i),a=Number(!i);return BigInt(e.getInt32(t,i)*a+e.getInt32(t+4,i)*r)<<n|BigInt(e.getUint32(t,i)*r+e.getUint32(t+4,i)*a)}(this,e,t)}),"getBigUint64"in DataView||(DataView.prototype.getBigUint64=function(e,t){return function(e,t,i){let r=e.getUint32(t,i),a=e.getUint32(t+4,i),s=Number(!!i),l=Number(!i);return BigInt(r*l+a*s)<<n|BigInt(r*s+a*l)}(this,e,t)});var r=i(3549);let a=["T","C","A","G"],s=[];for(let e=0;e<256;e++)s.push(a[e>>6&3]+a[e>>4&3]+a[e>>2&3]+a[3&e]);let l=s.map(e=>e.toLowerCase());class o{constructor({filehandle:e,path:t}){if(e)this.filehandle=e;else if(t)this.filehandle=new r.S9(t);else throw Error("must supply path or filehandle")}async _detectEndianness(){let e=new DataView((await this.filehandle.read(8,0)).buffer);if(440477507===e.getInt32(0,!0))this.version=e.getInt32(0,!0);else throw Error("not a 2bit file")}getHeader(){return this.headerP||(this.headerP=this._getHeader().catch(e=>{throw this.headerP=void 0,e})),this.headerP}async _getHeader(){await this._detectEndianness();let e=await this.filehandle.read(16,0),t=new DataView(e.buffer,e.byteOffset,e.length),i=0,n=t.getInt32(i,!0);if(i+=4,440477507!==n)throw Error(`Wrong magic number ${n}`);let r=t.getInt32(i,!0);i+=4;let a=t.getUint32(i,!0);return i+=4,{version:r,magic:n,sequenceCount:a,reserved:t.getUint32(i,!0)}}getIndex(){return this.indexP||(this.indexP=this._getIndex().catch(e=>{throw this.indexP=void 0,e})),this.indexP}async _getIndex(){let e=await this.getHeader(),t=8+e.sequenceCount*(257+(1===this.version?8:4)),i=await this.filehandle.read(t,8),n=new DataView(i.buffer,i.byteOffset,i.length),r=0,a=n.getUint32(r,!0);r+=8;let s=[],l=new TextDecoder("utf8");for(let t=0;t<a;t++){let t=n.getUint8(r);r+=1;let a=l.decode(i.subarray(r,r+t));if(r+=t,1===e.version){let e=Number(n.getBigUint64(r,!0));r+=8,s.push({offset:e,name:a})}else{let e=n.getUint32(r,!0);r+=4,s.push({offset:e,name:a})}}return Object.fromEntries(s.map(({name:e,offset:t})=>[e,t]))}async getSequenceNames(){return Object.keys(await this.getIndex())}async getSequenceSizes(){let e=await this.getIndex(),t=Object.keys(e),i=await Promise.all(Object.values(e).map(e=>this._getSequenceSize(e))),n={};for(let[e,r]of t.entries())n[r]=i[e];return n}async getSequenceSize(e){let t=(await this.getIndex())[e];return t?this._getSequenceSize(t):void 0}async _getSequenceSize(e){return this._record1(e).then(e=>e.dnaSize)}async _record1(e,t=8){let i=await this.filehandle.read(t,e),n=0,r=new DataView(i.buffer,i.byteOffset,i.length),a=r.getUint32(n,!0);n+=4;let s=r.getUint32(n,!0);return n+=4,{dnaSize:a,nBlockCount:s}}async _record2(e,t){let i=await this.filehandle.read(t,e),n=0,r=new DataView(i.buffer,i.byteOffset,i.length),a=r.getUint32(n,!0);n+=4;let s=[];for(let e=0;e<a;e++){let e=r.getUint32(n,!0);n+=4,s.push(e)}let l=[];for(let e=0;e<a;e++){let e=r.getUint32(n,!0);n+=4,l.push(e)}return{maskBlockCount:r.getUint32(n,!0),nBlockSizes:l,nBlockStarts:s}}async _record3(e,t){let i=await this.filehandle.read(t,e),n=0,r=new DataView(i.buffer,i.byteOffset,i.length),a=r.getUint32(n,!0);n+=4;let s=[];for(let e=0;e<a;e++){let e=r.getUint32(n,!0);n+=4,s.push(e)}let l=[];for(let e=0;e<a;e++){let e=r.getUint32(n,!0);n+=4,l.push(e)}return{maskBlockCount:a,maskBlockSizes:l,maskBlockStarts:s,reserved:r.getInt32(n,!0)}}async _getSequenceRecord(e){let t=await this._record1(e),i=8*t.nBlockCount+8,n=await this._record2(e+4,i),r=8*n.maskBlockCount+8,a=await this._record3(e+4+i-4,r);return{dnaSize:t.dnaSize,nBlocks:{starts:n.nBlockStarts,sizes:n.nBlockSizes},maskBlocks:{starts:a.maskBlockStarts,sizes:a.maskBlockSizes},dnaPosition:e+4+i-4+r}}async getSequence(e,t=0,i=Number.POSITIVE_INFINITY){let n=(await this.getIndex())[e];if(!n)return;let r=await this._getSequenceRecord(n);if(t<0)throw TypeError("regionStart cannot be less than 0");i>r.dnaSize&&(i=r.dnaSize);let a=this._getOverlappingBlocks(t,i,r.nBlocks.starts,r.nBlocks.sizes),o=this._getOverlappingBlocks(t,i,r.maskBlocks.starts,r.maskBlocks.sizes),h=Math.ceil((i-t)/4)+1,u=Math.floor(t/4),c=await this.filehandle.read(h,r.dnaPosition+u),d="";for(let e=t;e<i;e+=1){for(;o.length>0&&o[0].end<=e;)o.shift();let t=o[0]&&o[0].start<=e&&o[0].end>e;if(a[0]&&e>=a[0].start&&e<a[0].end){let n=a.shift();for(;e<n.end&&e<i;e+=1)d+=t?"n":"N";e-=1}else{let i=Math.floor(e/4)-u,n=e%4,r=c[i];d+=t?l[r][n]:s[r][n]}}return d}_getOverlappingBlocks(e,t,i,n){let r,a;for(let[s,l]of i.entries())if(e>=l+n[s]||t<=l){if(void 0!==r){a=s;break}}else void 0===r&&(r=s);if(void 0===r)return[];void 0===a&&(a=i.length);let s=Array(a-r);for(let e=r;e<a;e+=1)s[e-r]={start:i[e],end:i[e]+n[e],size:n[e]};return s}}var h=i(87290),u=i(77207),c=i(61795),d=i(52427),f=i(12307);class g extends u.BaseSequenceAdapter{async initChromSizes(){let e=(0,h.readConfObject)(this.config,"chromSizesLocation");if("/path/to/default.chrom.sizes"!==e.uri&&""!==e.uri){let t=(0,c.openLocation)(e,this.pluginManager);return Object.fromEntries((await t.readFile("utf8")).split(/\n|\r\n|\r/).filter(e=>!!e.trim()).map(e=>{let[t,i]=e.split("	");return[t,+i]}))}}async setupPre(){return{twobit:new o({filehandle:(0,c.openLocation)(this.getConf("twoBitLocation"),this.pluginManager)}),chromSizesData:await this.initChromSizes()}}async setup(){return this.setupP||(this.setupP=this.setupPre().catch(e=>{throw this.setupP=void 0,e})),this.setupP}async getRefNames(){let{chromSizesData:e,twobit:t}=await this.setup();return e?Object.keys(e):t.getSequenceNames()}async getRegions(){let{chromSizesData:e,twobit:t}=await this.setup();if(e)return Object.keys(e).map(t=>({refName:t,start:0,end:e[t]}));{let e=await t.getSequenceSizes();return Object.keys(e).map(t=>({refName:t,start:0,end:e[t]}))}}getFeatures({refName:e,start:t,end:i}){return(0,d.ObservableCreate)(async n=>{let{twobit:r}=await this.setup(),a=await r.getSequenceSize(e),s=void 0!==a?Math.min(a,i):i,l=await r.getSequence(e,t,s);l&&n.next(new f.default({id:`${e} ${t}-${s}`,data:{refName:e,start:t,end:s,seq:l}})),n.complete()})}}},3549:function(e,t,i){i.d(t,{S9:function(){return n}});class n{readFile(){throw Error("unimplemented")}read(){throw Error("unimplemented")}close(){throw Error("unimplemented")}}}}]);