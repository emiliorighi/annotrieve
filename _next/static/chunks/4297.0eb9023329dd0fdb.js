"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4297],{98239:function(t,e,n){n.d(e,{o:function(){return r}});function r(t,e){let n=0,r=0,o=0,i=[];for(let s=0;s<t.length&&o<e.length;s+=2){let l=+t[s],a=t[s+1];if("S"===a||"I"===a){for(let t=0;t<l&&o<e.length;t++)e[o]===n+t&&o++;n+=l}else if("D"===a||"N"===a)r+=l;else if("M"===a||"X"===a||"="===a){for(let t=0;t<l&&o<e.length;t++)e[o]===n+t&&(i.push({ref:r+t,idx:o}),o++);n+=l,r+=l}}return i}},85800:function(t,e,n){n.d(e,{b:function(){return l}});var r=n(98239),o=n(20687),i=n(99878),s=n(93755);function l(t,e){let n=t.get("start"),l=t.get("end"),a=t.get("strand"),f=l-n,d=(0,s.TN)(t,"MM","Mm")||"",u=[],p=[],c=[],h=[],g=t.get("seq");if(g){let n=(0,i.m)(t),s=(0,o.X)(d,g,a),l=0;for(let{type:t,positions:o}of s){for(let{ref:i,idx:s}of(0,r.o)(e,o)){if(i<0||i>=f)continue;let e=l+(-1===a?o.length-1-s:s),r=(null==n?void 0:n[e])||0;"m"===t?(u[i]=1,c[i]=r):"h"===t&&(p[i]=1,h[i]=r)}l+=o.length}}return{methBins:u,hydroxyMethBins:p,methProbs:c,hydroxyMethProbs:h}}},20687:function(t,e,n){n.d(e,{X:function(){return i}});var r=n(42382),o=n(66889);function i(t,e,n){let i=-1===n?(0,r.revcom)(e):e,s=t.split(";"),l=[];for(let t of s){if(""===t)continue;let e=t.split(","),r=e[0],s=o.R.exec(r);if(!s)throw Error(`bad format for MM tag: "${t}"`);let[,a,f,d]=s,u=d.split(/(\d+|.)/);for(let t of("-"===f&&(console.warn("unsupported negative strand modifications"),l.push({type:"unsupported",positions:[],base:a,strand:f})),u)){if(""===t)continue;let r=0,o=[];for(let t=1,s=e.length;t<s;t++){let s=+e[t];do("N"===a||a===i[r])&&s--,r++;while(s>=0&&r<i.length);if(-1===n){let t=i.length-r;t>=0&&o.unshift(t)}else o.push(r-1)}l.push({type:t,base:a,strand:f,positions:o})}}return l}},99878:function(t,e,n){n.d(e,{m:function(){return o}});var r=n(93755);function o(t){let e=(0,r.TN)(t,"ML","Ml")||[];if(e){let t=[];if("string"==typeof e){let n=e.split(",");for(let e=0,r=n.length;e<r;e++)t.push(+n[e]/255)}else for(let n=0,r=e.length;n<r;n++)t.push(e[n]/255);return t}{let e=(0,r.TN)(t,"MP","Mp");if(e){let t=[];for(let n=0,r=e.length;n<r;n++){let r=e.charCodeAt(n)-33;t.push(Math.min(1,r/50))}return t}return}}},14297:function(t,e,n){n.r(e),n.d(e,{default:function(){return v}});var r=n(77207),o=n(52427),i=n(12307),s=n(47358),l=n(15097),a=n(93755),f=n(42382),d=n(47368);function u(t){return"softclip"===t||"hardclip"===t||"insertion"===t}function p(t,e,n,r){let o=t[n][r];void 0===o&&(o=t[n][r]={entryDepth:0,probabilities:[],"-1":0,0:0,1:0}),o.entryDepth++,o[e]++}function c(t,e,n,r,o){let i=t[n][r];void 0===i&&(i=t[n][r]={entryDepth:0,probabilities:[],"-1":0,0:0,1:0}),i.entryDepth++,i.probabilities.push(o),i[e]++}var h=n(18228),g=n(60288),m=n(85800);async function b({fetchSequence:t,features:e,region:n,opts:r}){let{stopToken:o,colorBy:i}=r,s={},l=[],a=Math.max(0,n.start-1),b=n.start-a,v=performance.now();for(let r of e){if(performance.now()-v>400&&((0,d.checkStopToken)(o),v=performance.now()),!function({feature:t,bins:e,region:n}){let r=t.get("start"),o=t.get("end"),i=t.get("strand"),s=n.end-n.start;for(let t=r;t<o+1;t++){let r=t-n.start;r>=0&&r<s&&(void 0===e[r]&&(e[r]={depth:0,readsCounted:0,ref:{probabilities:[],entryDepth:0,"-1":0,0:0,1:0},snps:{},mods:{},nonmods:{},delskips:{},noncov:{}}),t!==o&&(e[r].depth++,e[r].readsCounted++,e[r].ref.entryDepth++,e[r].ref[i]++))}}({feature:r,bins:l,region:n}),(null==i?void 0:i.type)==="modifications"){let e=await t({...n,start:a,end:n.end+1})||"";!function({feature:t,colorBy:e,region:n,bins:r,regionSequence:o}){var i,s,l;let a=t.get("start"),d=t.get("strand"),u=t.get("end"),p=null===(i=null==e?void 0:e.modifications)||void 0===i?void 0:i.twoColor,g=null===(s=null==e?void 0:e.modifications)||void 0===s?void 0:s.isolatedModification;null===(l=(0,h.A)(t))||void 0===l||l.forEach(({allProbs:t,prob:e,type:i},s)=>{if(g&&i!==g)return;let l=s+a-n.start;if(l>=0&&l<r.length&&s+a<u){void 0===r[l]&&(r[l]={depth:0,readsCounted:0,snps:{},ref:{probabilities:[],entryDepth:0,"-1":0,0:0,1:0},mods:{},nonmods:{},delskips:{},noncov:{}});let n=1-(0,f.sum)(t),s=r[l];s.refbase=o[l],p&&n>(0,f.max)(t)?c(s,d,"nonmods",`nonmod_${i}`,n):c(s,d,"mods",`mod_${i}`,e)}s++})}({feature:r,colorBy:i,bins:l,region:n,regionSequence:e.slice(b)})}else if((null==i?void 0:i.type)==="methylation"){let e=await t({...n,start:a,end:n.end+1})||"";!function({feature:t,region:e,bins:n,regionSequence:r}){var o;let i=t.get("start"),s=t.get("end"),l=t.get("strand"),a=t.get("seq"),d=null!==(o=t.get("mismatches"))&&void 0!==o?o:[],u=r.toLowerCase();if(a){let r=(0,g.hs)(t.get("CIGAR")),{methBins:o,methProbs:a}=(0,m.b)(t,r),p=d.filter(t=>"deletion"===t.type);for(let t=0;t<s-i;t++){let r=t+i,s=u[r-e.start+1],d=u[r-e.start+2];if("c"===s&&"g"===d){let s=n[r-e.start],d=n[r-e.start+1],u=o[t],h=o[t+1],g=a[t],m=a[t+1];u&&(void 0===g||g>.5)||h&&(void 0===m||m>.5)?(s&&(c(s,l,"mods","cpg_meth",g||0),s.ref.entryDepth--,s.ref[l]--),d&&(c(d,l,"mods","cpg_meth",m||0),d.ref.entryDepth--,d.ref[l]--)):(s&&!p.some(t=>(0,f.doesIntersect2)(r,r+1,t.start+i,t.start+i+t.length))&&(c(s,l,"nonmods","cpg_unmeth",1-(g||0)),s.ref.entryDepth--,s.ref[l]--),d&&!p.some(t=>(0,f.doesIntersect2)(r+1,r+2,t.start+i,t.start+i+t.length))&&(c(d,l,"nonmods","cpg_unmeth",1-(m||0)),d.ref.entryDepth--,d.ref[l]--))}}}}({feature:r,bins:l,region:n,regionSequence:e})}!function({feature:t,region:e,bins:n,skipmap:r}){var o;let i=t.get("start"),s=t.get("strand");for(let l of null!==(o=t.get("mismatches"))&&void 0!==o?o:[]){let o=i+l.start,a=u(l.type)?1:l.length,f=o+a;for(let t=o;t<o+a;t++){let r=t-e.start;if(r>=0&&r<n.length){let t=n[r],{base:e,altbase:o,type:i}=l,a=u(i);"deletion"===i||"skip"===i?(p(t,s,"delskips",i),t.depth--):a?p(t,s,"noncov",i):(p(t,s,"snps",e),t.ref.entryDepth--,t.ref[s]--,t.refbase=o)}}if("skip"===l.type){let e=t.get("tags"),n=(null==e?void 0:e.XS)||(null==e?void 0:e.TS),i=null==e?void 0:e.ts,l="+"===n?1:"-"===n?-1:("+"===i?1:"-"===n?-1:0)*s,a=`${o}_${f}_${l}`;void 0===r[a]&&(r[a]={feature:t,start:o,end:f,strand:s,effectiveStrand:l,score:0}),r[a].score++}}}({feature:r,skipmap:s,bins:l,region:n})}for(let t of l)t&&(t.mods=Object.fromEntries(Object.entries(t.mods).map(([t,e])=>[t,{...e,avgProbability:e.probabilities.length?(0,f.sum)(e.probabilities)/e.probabilities.length:void 0}])),t.nonmods=Object.fromEntries(Object.entries(t.nonmods).map(([t,e])=>[t,{...e,avgProbability:e.probabilities.length?(0,f.sum)(e.probabilities)/e.probabilities.length:void 0}])));return{bins:l,skipmap:s}}class v extends r.BaseFeatureDataAdapter{async configure(){var t,e;let n=this.getConf("subadapter"),r=n.sequenceAdapter,o=await (null===(t=this.getSubAdapter)||void 0===t?void 0:t.call(this,n)),i=r?await (null===(e=this.getSubAdapter)||void 0===e?void 0:e.call(this,r)):void 0;if(!o)throw Error("Failed to get subadapter");return{subadapter:o.dataAdapter,sequenceAdapter:null==i?void 0:i.dataAdapter}}async fetchSequence(t){let{sequenceAdapter:e}=await this.configure();if(e)return(0,a.O)(t,e)}getFeatures(t,e={}){return(0,o.ObservableCreate)(async n=>{let{subadapter:r}=await this.configure(),o=await (0,s.z)(r.getFeatures(t,e).pipe((0,l.q)())),{bins:a,skipmap:f}=await b({features:o,region:t,opts:e,fetchSequence:t=>this.fetchSequence(t)}),d=0;for(let e of a){if(e){let r=t.start+d;n.next(new i.default({id:`${this.id}-${r}`,data:{score:e.depth,snpinfo:e,start:r,end:r+1,refName:t.refName}}))}d++}for(let[t,e]of Object.entries(f))n.next(new i.default({id:t,data:{type:"skip",start:e.start,end:e.end,strand:e.strand,score:e.score,effectiveStrand:e.effectiveStrand}}));n.complete()},e.stopToken)}async getMultiRegionFeatureDensityStats(t,e){let{subadapter:n}=await this.configure();return n.getMultiRegionFeatureDensityStats(t,e)}async getRefNames(t={}){let{subadapter:e}=await this.configure();return e.getRefNames(t)}}},18228:function(t,e,n){n.d(e,{A:function(){return a}});var r=n(60288),o=n(98239),i=n(20687),s=n(99878),l=n(93755);function a(t,e){let n=t.get("strand"),a=t.get("seq"),f=(0,l.TN)(t,"MM","Mm")||"",d=e||(0,r.hs)(t.get("CIGAR"));if(a){let e=(0,i.X)(f,a,n),r=(0,s.m)(t),l=[],u=0;for(let{type:t,positions:i}of e){for(let{ref:e,idx:s}of(0,o.o)(d,i)){let o=(null==r?void 0:r[u+(-1===n?i.length-1-s:s)])||0;if(l[e]){let n=l[e];l[e]={allProbs:[...n.allProbs,o],prob:Math.max(n.prob,o),type:n.prob>o?n.type:t}}else l[e]={type:t,prob:o,allProbs:[o]}}u+=i.length}return l}}}}]);